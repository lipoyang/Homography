#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Apr 09, 2024 12:59:20 PM JST  platform: Windows NT

import sys
import os
import tkinter as tk
import tkinter.ttk as ttk
import tkinter.filedialog
import tkinter.messagebox
from tkinter.constants import *
import threading

import Homography
import HomographyTest4

def main(*args):
    '''Main entry point for the application.'''
    global root, _w1
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = Homography.mainWindow(_top1)

    # 初期化コード追加
    _w1.canvasMain.bind("<Button-1>",        HomographyTest4.mouse_down)
    _w1.canvasMain.bind('<ButtonRelease-1>', HomographyTest4.mouse_up  )
    _w1.canvasMain.bind('<Motion>',          HomographyTest4.mouse_move)
    _w1.canvasMain.bind("<Map>", canvas_onMap)

    root.mainloop()

def canvas_onMap(event):
    global _w1
    HomographyTest4.initialize(_w1.canvasMain)

def buttonLoad_onClick(*args):
    global file_name, sub_window
    fTyp = [("ビットマップファイル", "*.bmp")]
    iDir = os.path.abspath(os.path.dirname(__file__))
    file_name = tkinter.filedialog.askopenfilename(filetypes=fTyp, initialdir=iDir)
    if file_name != "":
        # print(f"file_name={file_name}")
        sub_window = tkinter.Toplevel(root)
        sub_window.title(" ")
        label = tkinter.Label(sub_window, text = "画像読み込み中")
        label.pack()
        progress_bar = ttk.Progressbar(sub_window, orient="horizontal", length=200, mode="indeterminate")
        progress_bar.pack()
        progress_bar.start(5)
        thread1 = threading.Thread(target=loadImage)
        thread1.start()

def loadImage():
    global file_name, sub_window
    HomographyTest4.loadImage(file_name)
    sub_window.destroy()

def buttonSave_onClick(*args):
    if not HomographyTest4.hasImageLoaded: return
    fTyp = [("ビットマップファイル", "*.png")]
    iDir = os.path.abspath(os.path.dirname(__file__))
    file_name = tkinter.filedialog.asksaveasfilename(filetypes=fTyp, initialdir=iDir, defaultextension = "png")
    if file_name != "":
        print(f"file_name={file_name}")
        HomographyTest4.saveImage(file_name)

def checkBorder_onChange(*args):
    global _w1
    check = _w1.checkBorderVal.get()
    # print(f"check={check}")
    HomographyTest4.setFrameValid(check)

if __name__ == '__main__':
    Homography.start_up()




